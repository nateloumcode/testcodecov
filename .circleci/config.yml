version: 2.1

executors:
  python-node-executor:
    docker:
      - image: circleci/python:3.8-node

jobs:
  build_and_test:
    executor: python-node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            python manage.py test
      - run:
          name: Collect coverage
          command: |
            . venv/bin/activate
            pip install coverage codecov
            coverage run --source=. manage.py test
            coverage xml
            codecov
      - run:
          name: Install Mutmut
          command: |
            . venv/bin/activate
            pip install mutmut
      - run:
          name: Run Mutmut
          command: |
            . venv/bin/activate
            mutmut run --CI
      - restore_cache:
          keys:
            - node-v1-{{ checksum "frontend/package-lock.json" }}
            - node-v1-
      - run:
          name: Install Node.js dependencies
          command: |
            cd frontend
            npm ci
      - save_cache:
          paths:
            - ./frontend/node_modules
          key: node-v1-{{ checksum "frontend/package-lock.json" }}
      - run:
          name: Run React tests
          command: |
            cd frontend
            npm test -- --watchAll=false
      - run:
          name: Build React app
          command: |
            cd frontend
            npm run build
workflows:
  version: 2
  build-deploy:
    jobs:
      - build_and_test
